<?xml version="1.0" encoding="UTF-8" ?>
<xs:schema attributeFormDefault="unqualified" xmlns:xs="http://www.w3.org/2001/XMLSchema"
    targetNamespace="http://starklabs.io" xmlns="http://starklabs.io"
    elementFormDefault="qualified">

    <xs:annotation>
        <xs:documentation>
            Any course structure that is pushed to Stark Labs has to comply with
            this structure.
        </xs:documentation>
    </xs:annotation>

    <xs:element name="course" type="CourseType" />


    <!-- Course -->
    <xs:complexType name="CourseType">
        <xs:annotation>
            <xs:documentation>
                Base type for a course. A course can contain up to 10 chapters 
                (keeping the number of chapters relatively low will encourage consumers 
                to follow along).
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="chapter" type="ChapterType" maxOccurs="10" />
        </xs:sequence>
        <xs:attribute name="title" type="ShortStringType" use="required"/>
    </xs:complexType>
    

    <!-- Chapter -->
    <xs:complexType name="ChapterType">
        <xs:annotation>
            <xs:documentation>
                Base type for a chapter. A chapter contains cards which can be of type:
                * Instruction: plain text explaining a topic or, for example, giving instructions
                before a code card.
                * Code: a prompt where (s)he has to write working code.
                * Media: either video or an explanatory image - useful for showcasing setups.
                (keeping the number of chapters relatively low will encourage consumers 
                to follow along).
                * Questions: short multiple choice questions meant to check understanding
                of the topic at hand.
            </xs:documentation>
        </xs:annotation>
        <xs:sequence>
            <xs:element name="card" type="CardType"
                maxOccurs="10" />
        </xs:sequence>
        <xs:attribute name="title" type="ShortStringType" use="required"/>
        <xs:attribute name="objective" type="ShortStringType" use="required"/>
    </xs:complexType>


    <!-- Card -->
    <xs:complexType name="CardType">
        <xs:choice>
            <xs:sequence>
                <xs:element name="instruction" type="InstructionType" />
                <xs:element name="media" type="MediaType" minOccurs="0" maxOccurs="1" />
            </xs:sequence>
            <xs:element name="code" type="CodeType" />
            <xs:element name="media" type="MediaType" />
            <xs:sequence>
                <xs:element name="question" type="QuestionType" />
                <xs:element name="media" type="MediaType" minOccurs="0" maxOccurs="1"/>
            </xs:sequence>
        </xs:choice>
        <xs:attribute name="title" type="ShortStringType" use="required"/>
    </xs:complexType>


    <!-- Instruction -->
    <xs:complexType name="InstructionType">
        <xs:simpleContent>
            <xs:extension base="BodyType">
                <xs:attribute name="title" type="ShortStringType"/>
            </xs:extension>
        </xs:simpleContent>
    </xs:complexType>

    <xs:simpleType name="ShortStringType">
        <xs:restriction base="xs:string">
            <xs:maxLength value="40" />
        </xs:restriction>
    </xs:simpleType>
    
    <xs:simpleType name="BodyType">
        <xs:restriction base="xs:string">
            <xs:maxLength value="300" />
        </xs:restriction>
    </xs:simpleType>


    <!-- Question -->
    <xs:complexType name="QuestionType">
        <xs:annotation>
            <xs:documentation>
                Use this card type to provide answer options (2 min., 4 max.)) to a
                user's question (state the question in the parent card element's
                title attribute). To provide answers, use AnswerType and CorrectAnswerType. 
                You have to have at least one CorrectAnswerType element.
            </xs:documentation>
        </xs:annotation>
        <!-- As you might realize down there, whoever writes an XML is required to 
             supply a correctAnswer tag *first* in the list of possible answers.

             This is dumb of course (we should allow whatever order while enforcing the
             presence of 1 correctAnswer) but XSD 1.0 doesn't have any constructs
             that enable you to enforce the presence of an element and also allow
             any possible (mangled) order. XSD 1.1 allows <xs:all> with a maxOccurs
             that isn't either 0 or 1 but there are only Java-based validators that
             support it. If you don't get this you're gonna end up with Unique Particle
             Attribution (look it up) or something.

             So, in short, we have to shuffle the answers ourselves. 
             Feel free to rewrite this if you ever find a better solution :D. 
        -->
	    <xs:sequence>
		  <xs:element name="correctAnswer" type="AnswerType" />
		  <xs:element name="answerOption" type="AnswerType" maxOccurs="3" />
	    </xs:sequence>
        <xs:attribute name="q" type="ShortStringType" use="required"/>
        <xs:attribute name="difficulty" type="DifficultyType" use="required" />
    </xs:complexType>


    <!-- Answer -->
    <xs:complexType name="AnswerType">
        <xs:simpleContent>
            <xs:extension base="ShortStringType" />
        </xs:simpleContent>
    </xs:complexType>

    <!-- Code -->
    <xs:complexType name="CodeType">
        <xs:annotation>
            <xs:documentation>
                Use this card to specify paths to source code and tests that run against it. 
                Specify the path of the source code template with the "src" attribute, the file
                that contains the recommended solution with "solution" and the test suite to run 
                with "test".
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="src" type="xs:anyURI" use="required"/>
        <xs:attribute name="test" type="xs:anyURI" use="required"/>
        <xs:attribute name="solution" type="xs:anyURI" use="required"/>
        <xs:attribute name="difficulty" type="DifficultyType" use="required"/>
    </xs:complexType>


    <!-- Difficulty -->
    <xs:simpleType name="DifficultyType">
        <xs:restriction base="xs:string">
            <xs:enumeration value="easy" />
            <xs:enumeration value="medium" />
            <xs:enumeration value="hard" />
        </xs:restriction>
    </xs:simpleType>


    <!-- Media -->
    <xs:complexType name="MediaType">
        <xs:annotation>
            <xs:documentation>
                Use this card to specify paths to media files (e.g. videos containing
                how-to demonstrations for physical setups.
            </xs:documentation>
        </xs:annotation>
        <xs:attribute name="src" type="xs:anyURI" use="required"/>
    </xs:complexType>


</xs:schema>
